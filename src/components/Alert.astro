---
interface Props {
  status: 'error' | 'submitted';
  message: string;
}

const { status, message } = Astro.props;

const statusList = {
  error: {
    bg: 'bg-red-50 ',
    text: 'text-red-800',
    icon: 'text-red-400',
  },
  submitted: {
    bg: 'bg-green-50 ',
    text: 'text-green-800',
    icon: 'text-green-400',
  },
};
---

<div role="alert" class={`rounded-md p-4 mb-6 ${statusList[status].bg}`}>
  <div class="flex">
    <div class="flex-shrink-0">
      <svg
        class={`h-5 w-5 ${statusList[status].icon}`}
        viewBox="0 0 20 20"
        fill="currentColor"
        aria-hidden="true"
      >
        {
          status === 'error' && (
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z"
              clip-rule="evenodd"
            />
          )
        }

        {
          status === 'submitted' && (
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
              clip-rule="evenodd"
            />
          )
        }
      </svg>
    </div>
    <div class="ml-3">
      <p class={`text-sm font-medium ${statusList[status].text}`}>
        {message}
      </p>
    </div>
  </div>
</div>
